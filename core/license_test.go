package core

/* Test autogenerated with the tool go-test-gen. Created 2024-06-26 15:25:46 Wednesday */

import (
	"os"
	"testing"

	"github.com/stretchr/testify/assert"
)

func cleanupLicenseTest() {
	os.Remove("LICENSE.txt")
}

func TestFetchLicense(t *testing.T) {
	assert := assert.New(t)

	tests := []struct {
		name           string
		license        string
		isLicenseEmpty bool
		isError        bool
	}{
		{"test fetch license with no existing license name", "bad-license", true, true},
		{"test fetch license with existing license name", "MIT", false, false},
	}

	for _, test := range tests {
		t.Run(test.name, func(t *testing.T) {
			licenseContent, err := FetchLicense(test.license)
			if test.isError {
				assert.NotNil(err)
			} else {
				assert.Nil(err)
			}

			if test.isLicenseEmpty {
				assert.Empty(licenseContent)
			} else {
				assert.NotEmpty(licenseContent)
			}
		})
	}
}

func TestExportLicense(t *testing.T) {
	defer cleanupLicenseTest()
	// todo implement
	assert := assert.New(t)

	tests := []struct {
		name           string
		isError        bool
		projectName    string
		licenseContent string
	}{
		{"test creation of license file without error", false, "", "license content"},
		{"test creation of licence file in a non existing directory", true, "dummy-folder", "license content"},
	}

	for _, test := range tests {
		t.Run(test.name, func(t *testing.T) {
			err := ExportLicense(test.projectName, test.licenseContent)
			if test.isError {
				assert.NotNil(err)
			} else {
				assert.Nil(err)
			}
		})
	}
}
